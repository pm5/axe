// Generated by LiveScript 1.3.1
(function(){
  'use strict';
  var cheerio, superagent, async, fs, levelUrl, getTableData;
  cheerio = require('cheerio');
  superagent = require('superagent');
  async = require('async');
  fs = require('fs');
  levelUrl = "http://axe-level-1.herokuapp.com/lv3/";
  getTableData = function(bodyText){
    var $, rows;
    $ = cheerio.load(bodyText);
    rows = $('tr').toArray();
    rows.shift();
    return rows.map(function(it){
      var i$, ref$, len$, i, results$ = [];
      for (i$ = 0, len$ = (ref$ = [1, 3, 5]).length; i$ < len$; ++i$) {
        i = ref$[i$];
        results$.push(it.children[i].children[0].data);
      }
      return results$;
    });
  };
  superagent.get(levelUrl).end(function(res){
    var sessionId, i$, ref$, len$, s, ref1$, firstPageData, tasks;
    if (!res.ok) {
      throw res.text;
    }
    for (i$ = 0, len$ = (ref$ = res.header["set-cookie"]).length; i$ < len$; ++i$) {
      s = ref$[i$];
      ref1$ = /PHPSESSID=(.*?);/.exec(s), sessionId = ref1$[1];
      if (sessionId) {
        break;
      }
    }
    if (!sessionId) {
      throw "No PHPSESSID found.";
    }
    firstPageData = getTableData(res.text);
    tasks = repeatArray$([function(done){
      return superagent.get(levelUrl + "?page=next").set('cookie', "PHPSESSID=" + sessionId).end(function(res){
        switch (false) {
        case !res.ok:
          return done(null, getTableData(res.text));
        default:
          return done(res.text, null);
        }
      }, function(res){});
    }], 75);
    return async.series(tasks, function(err, data){
      var output, x;
      if (err) {
        throw err;
      }
      output = firstPageData.concat(data.reduce(function(prev, cur){
        return prev.concat(cur);
      }));
      return fs.writeFileSync('output.json', JSON.stringify(
      (function(){
        var i$, ref$, len$, results$ = [];
        for (i$ = 0, len$ = (ref$ = output).length; i$ < len$; ++i$) {
          x = ref$[i$];
          results$.push({
            town: x[0],
            village: x[1],
            name: x[2]
          });
        }
        return results$;
      }())));
    });
  });
  function repeatArray$(arr, n){
    for (var r = []; n > 0; (n >>= 1) && (arr = arr.concat(arr)))
      if (n & 1) r.push.apply(r, arr);
    return r;
  }
}).call(this);
